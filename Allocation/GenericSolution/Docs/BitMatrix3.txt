Activities:
A1= (JobId:0,MachineId:0) = 3 
A2= (JobId:0,MachineId:1) = 2
A3= (JobId:0,MachineId:2) = 2
						  
A4= (JobId:1,MachineId:0) = 2
A5= (JobId:1,MachineId:2) = 1
A6= (JobId:1,MachineId:1) = 4
						  
A7= (JobId:2,MachineId:1) = 4
A8= (JobId:2,MachineId:2) = 3
===========
Intersection Groups
G1 A1,A2,A3     7
G2 A4,A5,A6     7
G3 A7,A8        7
G4 A1,A4        5
G5 A2,A6,A7     10
G6 A3,A5,A8     6

Length
A1	A2	A3	A4	A5	A6	A7	A8
3	2	2	2	1	4	4	3

Order Constrains
A1,A2,A3
A4,A5,A6
A7,A8

Order Generate (No Start before constrain)
A1	A2	A3	A4	A5	A6	A7	A8
0	4	6	0	3	4	0	5
Order Generate (Shift After constrain)
A1	A2	A3	A4	A5	A6	A7	A8
4	2	0	5	4	0	3	0	

Friends & Enemies Matrix
	A1	A2	A3	A4	A5	A6	A7	A8
A1  0	0	0	0	1	1	1	1
A2  0	0	0	1	1	0	0	1
A3  0	0	0	1	0	1	1	0
A4  0	1	1	0	0	0	1	1
A5  1	1	0	0	0	0	1	0
A6  1	0	1	0	0	0	0	1
A7  1	0	1	1	1	0	0	0
A8  1	1	0	1	0	1	0	0

Select group with largest count of activities ,in this case G5(A2,A6,A7)
Compare conflicts with other groups
Increase time slots by (conflicts count - lenght difference) if > 0
G5,G1 = (10-7,A2:2)  = 0
G5,G2 = (10-7,A6:4)  = 1
G5,G3 = (10-7,A7:4)  = 1

Allocate G5(A2,A6,A7):Length(2,4,4)
Start Index:(4,0,0)
TS	A7	A7	A7	A7	A6	A6	A2	A2	A2	A2
After allocation
Intersection Groups
G1 A1,A3     	5
G2 A4,A5     	3
G3 A8        	3
G4 A1,A4        5
G6 A3,A5,A8     6
Allocate G6(A3,A5,A8):Length(2,1,3)
No Start Before(6,3,5)
TS	A7	A7	A7	A7	A6	A6	A2	A2	A2	A2	#	#
TS	#	#	A5	#	A8	A8	A8	#	#	#	A3	A3
TS	#	#	#	#	#	#	#	#	#	#	#	#
After allocation
Intersection Groups
G1 A1,     	3
G2 A4,     	2
G4 A1,A4        5
Allocate G4(A1,A4):Length(3,2)
No Start Before(0,0)
TS	A7	A7	A7	A7	A6	A6	A2	A2	A2	A2	#	#
TS	#	#	A5	#	A8	A8	A8	#	#	#	A3	A3
TS	A4	A4	A1	A1	A1	#	#	#	#	#	#	#
=============
Friends & Enemies Matrix
	A1	A2	A3	A4	A5	A6	A7	A8
A1  0	0	0	0	1	1	1	1
A2  0	0	0	1	1	0	0	1
A3  0	0	0	1	0	1	1	0
A4  0	1	1	0	0	0	1	1
A5  1	1	0	0	0	0	1	0
A6  1	0	1	0	0	0	0	1
A7  1	0	1	1	1	0	0	0
A8  1	1	0	1	0	1	0	0